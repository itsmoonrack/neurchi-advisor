<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

    <task:annotation-driven/>

    <!--    <security:http auto-config="true">-->
    <!--        <security:csrf disabled="true"/>-->

    <!--        <security:intercept-url pattern="/" access="permitAll"/>-->

    <!--        <security:logout logout-url="/logout"/>-->
    <!--    </security:http>-->

    <!--    <security:global-method-security pre-post-annotations="enabled"/>-->

    <!--    <security:authentication-manager>-->
    <!--        <security:authentication-provider user-service-ref="memoryUserDetailsManager"/>-->
    <!--    </security:authentication-manager>-->

    <!--    <security:user-service id="memoryUserDetailsManager">-->
    <!--        <security:user name="admin" authorities="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
    <!--    </security:user-service>-->

    <bean id="accessApplicationService" class="com.neurchi.advisor.identityaccess.application.AccessApplicationService"/>

    <bean id="eventProcessor" class="com.neurchi.advisor.identityaccess.application.IdentityAccessEventProcessor" scope="prototype">
        <constructor-arg type="com.neurchi.advisor.common.event.EventStore" ref="eventStore"/>
    </bean>

    <bean id="eventStore" class="com.neurchi.advisor.common.port.adapter.persistence.hibernate.HibernateEventStore"/>

    <bean id="facebookMaintenanceService" class="com.neurchi.advisor.identityaccess.application.FacebookMaintenanceService"/>

    <bean id="identityApplicationService" class="com.neurchi.advisor.identityaccess.application.IdentityApplicationService"/>

    <bean id="notificationApplicationService" class="com.neurchi.advisor.identityaccess.application.NotificationApplicationService"/>

    <bean id="notificationPublisher" class="com.neurchi.advisor.common.port.adapter.notification.RabbitMQNotificationPublisher">
        <constructor-arg index="0" ref="eventStore"/>
        <constructor-arg index="1" ref="publishedNotificationTrackerStore"/>
        <constructor-arg index="2" value="neurchiAdvisorIdentityAccess"/>
    </bean>

    <bean id="notificationSerializer" class="com.neurchi.advisor.common.notification.NotificationSerializer" factory-method="instance" primary="true"/>

    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" factory-bean="notificationSerializer" factory-method="objectMapper" primary="true"/>

    <bean id="notificationXmlSerializer" class="com.neurchi.advisor.common.notification.NotificationSerializer" factory-method="xmlInstance"/>

    <bean id="xmlMapper" class="com.fasterxml.jackson.dataformat.xml.XmlMapper" factory-bean="notificationXmlSerializer" factory-method="objectMapper"/>

    <bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter">
        <constructor-arg name="objectMapper" ref="xmlMapper"/>
    </bean>

    <bean id="authenticationService" class="FacebookAuthenticationService"/>

    <bean id="userAdapter" class="FacebookUserAdapter"/>

    <bean id="userPersonService" class="FacebookUserPersonService"/>

    <bean id="userService" class="FacebookUserService"/>

    <bean id="publishedNotificationTrackerStore" class="com.neurchi.advisor.common.port.adapter.persistence.hibernate.HibernatePublishedNotificationTrackerStore">
        <constructor-arg value="neurchiAdvisorIdentityAccess"/>
    </bean>

    <context:component-scan base-package="com.neurchi.advisor.identityaccess.resource"/>
</beans>